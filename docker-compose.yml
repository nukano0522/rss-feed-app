version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # dockerfile: Dockerfile.prod

    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      # ホットリロードのためのボリュームマウント用に作業ディレクトリを指定
      - type: bind
        source: ./frontend/src
        target: /app/src
      - type: bind
        source: ./frontend/public
        target: /app/public
      - type: bind
        source: ./frontend/index.html
        target: /app/index.html
      - type: bind
        source: ./frontend/vite.config.js
        target: /app/vite.config.js
      - type: volume
        source: frontend_node_modules
        target: /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    stdin_open: true
    tty: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql://user:password@db:3306/rss_reader
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=rss_reader
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "--password=password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mysql_data:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge